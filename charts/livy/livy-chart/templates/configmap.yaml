apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "livy-chart.configmapName" . }}
  {{- if .Values.ownerReference.overRide }}
  {{- with .Values.ownerReference.ownerReferences }}
  ownerReferences: {{- toYaml . | nindent 2 }}
  {{- end }}
  {{- end }}
  labels:
  {{- include "common.labels" (dict "componentName" ( include "livy-chart.configmapName" . ) "namespace" .Release.Namespace ) | nindent 4 }}
data:
  livy-client.conf: |
    # Environment variables here would be replaced by its values

    livy.rsc.server.connect.timeout = 600s
    livy.rsc.client.connect.timeout = 600s
  livy.conf: |
    # Environment variables here would be replaced by its values
    livy.repl.enable-hive-context = true
    livy.repl.jars = local:///opt/mapr/livy/livy-0.7.0/repl_2.12-jars/commons-codec-1.15.jar,local:///opt/mapr/livy/livy-0.7.0/repl_2.12-jars/livy-core_2.12-0.7.0.200-eep-810.jar,local:///opt/mapr/livy/livy-0.7.0/repl_2.12-jars/livy-repl_2.12-0.7.0.200-eep-810.jar
    livy.rsc.jars = local:///opt/mapr/livy/livy-0.7.0/rsc-jars/asm-5.0.4.jar,local:///opt/mapr/livy/livy-0.7.0/rsc-jars/livy-api-0.7.0.200-eep-810.jar,local:///opt/mapr/livy/livy-0.7.0/rsc-jars/livy-rsc-0.7.0.200-eep-810.jar,local:///opt/mapr/livy/livy-0.7.0/rsc-jars/minlog-1.3.0.jar,local:///opt/mapr/livy/livy-0.7.0/rsc-jars/netty-all-4.1.68.Final.jar,local:///opt/mapr/livy/livy-0.7.0/rsc-jars/objenesis-2.5.1.jar,local:///opt/mapr/livy/livy-0.7.0/rsc-jars/reflectasm-1.11.3.jar
    livy.rsc.pyspark.archives = local:///opt/mapr/spark/spark-2.4.7/python/lib/pyspark.zip,local:///opt/mapr/spark/spark-2.4.7/python/lib/py4j-0.10.9-src.zip
    {{- if eq .Values.sessionRecovery.kind "zookeeper" }}
    livy.server.recovery.mode = recovery
    livy.server.recovery.state-store = zookeeper
    livy.server.recovery.state-store.url = ${MAPR_ZK_QUORUM}
    livy.server.recovery.zk-state-store.key-prefix = livy/${POD_NAMESPACE}-${HOSTNAME}
    {{- else if eq .Values.sessionRecovery.kind "pvc" }}
    livy.server.recovery.mode = recovery
    livy.server.recovery.state-store = filesystem
    livy.server.recovery.state-store.url = file:///opt/mapr/livy/livy-{{ .Values.livyVersion }}/session-store
    {{- else }}
    livy.server.recovery.mode = off
    {{- end }}

  post-startup.sh: |
    #!/usr/bin/env bash
  pre-startup.sh: |
    #!/usr/bin/env bash
  spark-defaults.conf: |
    # Environment variables here would be replaced by its values

    spark.kubernetes.container.image.pullSecrets imagepull
    spark.kubernetes.container.image.pullPolicy IfNotPresent
    spark.kubernetes.driver.request.cores 1
    spark.kubernetes.driver.limit.cores 1
    spark.kubernetes.executor.request.cores 1
    spark.kubernetes.executor.limit.cores 1

    spark.kubernetes.container.image {{ include "livy-chart.fullDeImage" . }}
    {{- if .Values.sparkHistoryServer.integrate }}
    {{- if .Values.sparkHistoryServer.pvcName }}
    spark.kubernetes.driver.volumes.persistentVolumeClaim.sparkhs-eventlog-storage.options.claimName {{ .Values.sparkHistoryServer.pvcName }}
    spark.kubernetes.driver.volumes.persistentVolumeClaim.sparkhs-eventlog-storage.mount.path {{ .Values.sparkHistoryServer.eventsDir }}
    {{- end }}
    spark.eventLog.dir {{ .Values.sparkHistoryServer.eventsDir }}
    spark.eventLog.enabled true
    {{- else }}
    spark.eventLog.enabled false
    {{- end }}

    spark.ssl.enabled false
