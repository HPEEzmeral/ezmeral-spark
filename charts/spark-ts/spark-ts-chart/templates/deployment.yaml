apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  name: {{ ( include "spark-ts-chart.deploymentName" . ) }}
  {{- if .Values.ownerReference.overRide }}
  {{- with  .Values.ownerReference.ownerReferences }}
  ownerReferences: {{- toYaml . | nindent 2 }}
  {{- end }}
  {{- end }}
spec:
  progressDeadlineSeconds: {{ .Values.progressDeadlineSeconds }}
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
    {{- include "common.selectorLabels" (dict "componentName" ( include "spark-ts-chart.deploymentName" . ) ) | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
      {{- include "common.labels" (dict "componentName" ( include "spark-ts-chart.deploymentName" . ) "namespace" .Release.Namespace ) | nindent 8 }}
    spec:
      subdomain: {{ include "spark-ts-chart.serviceName" .  }}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          {{-  include "common.nodeAffinity.preferred" . | nindent 12 }}
          requiredDuringSchedulingIgnoredDuringExecution:
          {{-  include "common.nodeAffinity.required" . | nindent 12 }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          {{-  include "common.podAntiAffinity.preferred" (dict "componentName" ( include "spark-ts-chart.deploymentName" . ) ) | nindent 12 }}
      tolerations:
      {{- include "common.tolerations" (dict "componentName" ( include "spark-ts-chart.deploymentName" . ) "namespace" .Release.Namespace ) | nindent 8 }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "spark-ts-chart.serviceAccountName" . }}
      restartPolicy: {{ .Values.restartPolicy }}
      priorityClassName: "hpe-tenant-service"
      initContainers: []
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken  }}
      containers:
        - name: {{ ( include "spark-ts-chart.deploymentName" . ) }}
          args:
          {{- include "common.args" . | nindent 12 }}
          command:
          {{- include "common.commands" . | nindent 12 }}
          env:
          {{- include "spark-ts-chart.env" . | nindent 12 }}
          {{- if .Values.daemonize }}
            - name: SPARK_NO_DAEMONIZE
              value: "true"
          {{- end }}
          image: "{{ .Values.image.baseRepository }}/{{ .Values.image.imageName }}:{{ .Values.image.tag}}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          {{- include "spark-ts-chart.ports" . | nindent 12 }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.ports.sparkTsPort }}
            initialDelaySeconds: 180
            periodSeconds: 20
          readinessProbe:
            tcpSocket:
              port: {{ .Values.ports.sparkTsPort }}
            initialDelaySeconds: 30
            periodSeconds: 10
          
          lifecycle:
          {{- include "common.probe.lifecycle" . | nindent 12 }}
          resources:
          {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
          {{- include "common.securityContext" . | nindent 12 }}
          volumeMounts:
          {{- include "spark-ts-chart.volumeMounts" . | nindent 12 }}
            - name: spark-extra-configs
              mountPath: /opt/mapr/kubernetes/spark_secrets
      volumes:
        {{- include "spark-ts-chart.volumes" .  | nindent 8  }}
        - name: spark-extra-configs
          secret:
            secretName: spark-ts-secret-configs
            defaultMode: 420
            optional: false
      securityContext:
      {{- toYaml .Values.podSecurityContext | nindent 8 }}
