apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "livy-chart.configmapName" . }}
  {{- if .Values.ownerReference.overRide }}
  {{- with  .Values.ownerReference.ownerReferences }}
  ownerReferences: {{- toYaml . | nindent 2 }}
  {{- end }}
  {{- end }}
  labels:
  {{- include "common.labels" (dict "componentName" ( include "livy-chart.configmapName" . ) "namespace" .Release.Namespace ) | nindent 4 }}
data:
  livy-client.conf: |
    # Environment variables here would be replaced by its values

    livy.rsc.server.connect.timeout = 600s
    livy.rsc.client.connect.timeout = 600s
  livy.conf: |
    # Environment variables here would be replaced by its values
    livy.repl.enable-hive-context = true

    {{- if eq .Values.sessionRecovery.kind "zookeper"  }}
    livy.server.recovery.mode = recovery
    livy.server.recovery.state-store = zookeeper
    livy.server.recovery.state-store.url = ${MAPR_ZK_QUORUM}
    livy.server.recovery.zk-state-store.key-prefix = livy/tenant-${POD_NAMESPACE}
    {{- else if eq .Values.sessionRecovery.kind "pvc" }}
    livyConfigs["livy.server.recovery.mode"] = "recovery"
    livyConfigs["livy.server.recovery.state-store"] = "filesystem"
    livyConfigs["livy.server.recovery.state-store.url"] = "file://opt/mapr/livy/livy-{{ .Chart.AppVersion }}/session-store"
    {{- else }}
    livy.server.recovery.mode = "off"
    {{- end }}

  post-startup.sh: |
    #!/usr/bin/env bash
  pre-startup.sh: |
    #!/usr/bin/env bash
  spark-defaults.conf: |
    # Environment variables here would be replaced by its values

    spark.kubernetes.container.image.pullSecrets imagepull
    spark.kubernetes.container.image.pullPolicy IfNotPresent
    spark.kubernetes.driver.request.cores 1
    spark.kubernetes.driver.limit.cores 1
    spark.kubernetes.executor.request.cores 1
    spark.kubernetes.executor.limit.cores 1

    spark.kubernetes.container.image {{ include "livy-chart.fullDeImage" . }}
    {{- if .Values.sparkHistoryServer.integrate  }}
    {{- if .Values.sparkHistoryServer.pvcName }}
    spark.kubernetes.driver.volumes.persistentVolumeClaim.sparkhs-eventlog-storage.options.claimName {{ .Values.sparkHistoryServer.pvcName }}
    spark.kubernetes.driver.volumes.persistentVolumeClaim.sparkhs-eventlog-storage.mount.path {{ .Values.sparkHistoryServer.eventsDir }}
    {{- end }}
    spark.eventLog.dir {{ .Values.sparkHistoryServer.eventsDir }}
    spark.eventLog.enabled true
    {{- else }}
    spark.eventLog.enabled false
    {{- end }}
