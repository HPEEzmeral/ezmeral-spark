{{ $componentName := .Chart.Name }}
{{ $configmapName := printf "%s-cm" .Chart.Name  }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $componentName }}
  {{- if .Values.ownerReference.overRide }}
  {{- with  .Values.ownerReference.ownerReferences }}
  ownerReferences: {{- toYaml . | nindent 2 }}
  {{- end }}
  {{- end }}
spec:
  progressDeadlineSeconds: {{ .Values.progressDeadlineSeconds }}
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
    {{- include "common.selectorLabels" (dict "componentName" $componentName ) | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
      {{- include "common.labels" (dict "componentName" $componentName "namespace" .Release.Namespace ) | nindent 8 }}
    spec:
      subdomain: {{ $componentName }}-svc
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          {{-  include "common.nodeAffinity.preferred" . | nindent 12 }}
          requiredDuringSchedulingIgnoredDuringExecution:
        {{-  include "common.nodeAffinity.required" . | nindent 12 }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          {{-  include "common.podAntiAffinity.preferred" (dict "componentName" $componentName ) | nindent 12 }}
      tolerations:
      {{- include "common.tolerations" (dict "componentName" $componentName "namespace" .Release.Namespace ) | nindent 8 }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "spark-hs-chart.serviceAccountName" . }}
      restartPolicy: {{ .Values.restartPolicy }}
      priorityClassName: "hpe-tenant-service"
      initContainers: []
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken  }}
      containers:
        - name: {{ $componentName }}
          args:
          {{- include "common.args" . | nindent 12 }}
          command:
          {{- include "common.commands" . | nindent 12 }}
          env:
          {{- include "spark-hs-chart.env" . | nindent 12 }}
          {{- if not .Values.daemonize }}
            - name: SPARK_NO_DAEMONIZE
              value: {{ .Values.daemonize }}
          {{- end }}
          image: "{{ .Values.image.baseRepository }}/{{ .Values.image.imageName }}:{{ .Values.image.tag}}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          {{- include "spark-hs-chart.ports" . | nindent 12 }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.ports.httpPort }}
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: {{ .Values.ports.httpPort }}
            initialDelaySeconds: 5
            periodSeconds: 10
          lifecycle:
          {{- include "common.probe.lifecycle" . | nindent 12 }}
          resources:
          {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
          {{- include "common.securityContext" . | nindent 12 }}
          volumeMounts:
            {{- if .Values.spark_ssl.use_custom_keystore }}
            - name: spark-ssl-secrets
              mountPath: {{ .Values.spark_ssl.secret_mount_path }}
            {{- end }}
            {{- if .Values.use_extra_configs }}
            - name: spark-extra-configs
              mountPath: /opt/mapr/kubernetes/spark_secrets
            {{- end }}
          {{- include "spark-hs-chart.volumeMounts" . | nindent 12 }}
          {{- if ( eq .Values.eventlogstorage.kind "pvc") }}
          {{- include "spark-hs-chart.pvcVolumeMount" . | nindent 12 }}
          {{- end }}
          {{- if not .Values.tenantIsUnsecure }}
          {{- include "common.security.volumeMounts" . | nindent 12 }}
          {{- end }}
      volumes:
      {{- include "common.volumes" (dict "configmapName" $configmapName "componentName" $componentName) | nindent 8 }}
      {{- if ( eq .Values.eventlogstorage.kind "pvc") }}
      {{- include "spark-hs-chart.pvcVolume" . | nindent 8 }}
      {{- end }}
      {{- if not .Values.tenantIsUnsecure }}
      {{- include "common.security.volumes" . | nindent 8 }}
      {{- end }}
      {{- if .Values.spark_ssl.use_custom_keystore }}
        - name: spark-ssl-secrets
          secret:
            secretName: {{ .Values.spark_ssl.ssl_secret_name }}
            defaultMode: 420
            optional: false
      {{- end }}
      {{- if .Values.use_extra_configs }}
        - name: spark-extra-configs
          secret:
            secretName: spark-hs-secret-configs
            defaultMode: 420
            optional: false
      {{- end }}
      securityContext:
      {{- toYaml .Values.podSecurityContext | nindent 8 }}
